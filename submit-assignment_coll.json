{
	"info": {
		"_postman_id": "600e4e69-76a5-4682-871d-c616460755e5",
		"name": "Submit assignment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29257420"
	},
	"item": [
		{
			"name": "Student login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"sToken\", jsonData.token);\r",
							"\r",
							"pm.test(\"Student login - Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Student login - Validate user email is 'avstud@vaievem.tk'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user.email).to.eql(\"avstud@vaievem.tk\");\r",
							"});\r",
							"\r",
							"pm.test(\"Student login - user role is student\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user.role).to.eql(\"STUDENT\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"avstud@vaievem.tk\",\r\n  \"password\": \"passw123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/sign-in",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"sign-in"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teacher login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"tToken\", jsonData.token);\r",
							"\r",
							"pm.test(\"Teacher login - Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Teacher login - Validate user emailis 'asya.ogn39+1@gmail.com'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user.email).to.eql(\"asya.ogn39+1@gmail.com\");\r",
							"});\r",
							"\r",
							"pm.test(\"Teacher login - user role is teacher\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user.role).to.eql(\"TEACHER\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"asya.ogn39+1@gmail.com\",\r\n  \"password\": \"passw123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/sign-in",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"sign-in"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit assignment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Submit assignment - Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Submit assignment - body includes submitted assignment ID\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"38674\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{sToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"assignmentId\": 38674,\r\n  \"answers\": [\r\n    {\r\n      \"answer\": [\r\n        0\r\n      ],\r\n      \"textAnswer\": \"\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/submit-assignment",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"submit-assignment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit assignment - unauthorized",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Submit assignment - unauthorized - Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Submit assignment - unauthorized - 'Unauthorized'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"assignmentId\": 38674,\r\n  \"answers\": [\r\n    {\r\n      \"answer\": [\r\n        0\r\n      ],\r\n      \"textAnswer\": \"\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/submit-assignment",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"submit-assignment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit assignment - not enough permissions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Submit assignment - not enough permissions - Status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							"\r",
							"pm.test(\"Submit assignment - not enough permissions - 'Not enough permissions to process request'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Not enough permissions to process request\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"assignmentId\": 38674,\r\n  \"answers\": [\r\n    {\r\n      \"answer\": [\r\n        0\r\n      ],\r\n      \"textAnswer\": \"\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/submit-assignment",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"submit-assignment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit assignment - assignment not exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Submit assignment - assignment not exist - Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Submit assignment - assignment not exist - 'Assignment does not exist'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Assignment does not exist\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{sToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"assignmentId\": 101010101010,\r\n  \"answers\": [\r\n    {\r\n      \"answer\": [\r\n        0\r\n      ],\r\n      \"textAnswer\": \"\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/submit-assignment",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"submit-assignment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create textual quiz",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create textual quiz - Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsondata = pm.response.json();\r",
							"pm.environment.set(\"quizId\", jsondata.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Demo Quiz\",\r\n  \"totalScore\": 30,\r\n  \"passingPercentage\": 75,\r\n  \"showStopperQuestion\": 0,\r\n  \"questions\": [\r\n    {\r\n      \"type\": \"TEXTUAL\",\r\n      \"question\": \"Textual question 1\",\r\n      \"score\": 10\r\n    },\r\n      {\r\n      \"type\": \"TEXTUAL\",\r\n      \"question\": \"Textual question 2\",\r\n      \"score\": 10\r\n    },\r\n      {\r\n      \"type\": \"TEXTUAL\",\r\n      \"question\": \"Textual question 3\",\r\n      \"score\": 10\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/quiz",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"quiz"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create assignment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create assignment - Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"assignmentId\", jsonData[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"quizId\": {{quizId}},\r\n  \"userIds\": [27994]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/assignment",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"assignment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit assignment - already submitted - first submission",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Submit assignment - already submitted - first submission - Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var assignmentId = pm.environment.get(\"assignmentId\");\r",
							"\r",
							"pm.test(\"Submit assignment - already submitted - first submission - body contains ID of submitted assignment\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(assignmentId);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{sToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"assignmentId\": {{assignmentId}},\r\n  \"answers\": [\r\n    {\r\n      \"answer\": null,\r\n      \"textAnswer\": \"1\"\r\n    },\r\n     {\r\n      \"answer\": null,\r\n      \"textAnswer\": \"2\"\r\n    },\r\n     {\r\n      \"answer\": null,\r\n      \"textAnswer\": \"3\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/submit-assignment",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"submit-assignment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit assignment - already submitted - second submission",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Submit assignment - already submitted - second submission - Status code is 405\", function () {\r",
							"    pm.response.to.have.status(405);\r",
							"});\r",
							"\r",
							"pm.test(\"Submit assignment - already submitted - second submission - 'Assignment has been already submitted'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Assignment has been already submitted\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{sToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"assignmentId\": {{assignmentId}},\r\n  \"answers\": [\r\n    {\r\n      \"answer\": null,\r\n      \"textAnswer\": \"1\"\r\n    },\r\n     {\r\n      \"answer\": null,\r\n      \"textAnswer\": \"2\"\r\n    },\r\n     {\r\n      \"answer\": null,\r\n      \"textAnswer\": \"3\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/submit-assignment",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"submit-assignment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit assignment - question not exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Submit assignment - question not exist - Status code is 410\", function () {\r",
							"    pm.response.to.have.status(410);\r",
							"});\r",
							"\r",
							"pm.test(\"Submit assignment - question not exist - body includes 'does not exist' text\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\" does not exist\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{sToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"assignmentId\": 37471,\r\n  \"answers\": [\r\n    {\r\n      \"answer\": [\r\n        0\r\n      ],\r\n      \"textAnswer\": \"\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/submit-assignment",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"submit-assignment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit assignment - wrong definition",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Submit assignment - wrong definition - Status code is 411\", function () {\r",
							"    pm.response.to.have.status(411);\r",
							"});\r",
							"\r",
							"pm.test(\"Submit assignment - wrong definition - 'Error in Quiz definition: Unknown type of question'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Error in Quiz definition: Unknown type of question\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{sToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"assignmentId\": 38674,\r\n  \"answers\": [\r\n    {\r\n      \"answer\": [],\r\n      \"textAnswer\": \"hfdhgdfvbcvb\",\r\n      \"textAnswer1\": \"sdfsd\"\r\n    },\r\n    {\r\n      \"answer\": [],\r\n      \"textAnswer\": \"\",\r\n      \"textAnswer1\": \"sdfsd\"\r\n    },\r\n    {\r\n      \"answer\": [\"222\", \"222\", \"222\", \"222\"],\r\n      \"textAnswer\": \"xfghgn\",\r\n      \"textAnswer1\": \"sdfsd\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/submit-assignment",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"submit-assignment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit assignment - answer is not an option",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Submit assignment - answer is not an option - Status code is 412\", function () {\r",
							"    pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Submit assignment - answer is not an option - body contains 'is not an option for question' text\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"is not an option for question\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{sToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"assignmentId\": 38674,\r\n  \"answers\": [\r\n    {\r\n      \"answer\": [\r\n        0,\r\n        2,\r\n        3,\r\n        4\r\n      ],\r\n      \"textAnswer\": \"\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/submit-assignment",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"submit-assignment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete assignment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete assignment - Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Delete assignment - 'Assignment was deleted'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Assignment was deleted\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/assignment/{{assignmentId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"assignment",
						"{{assignmentId}}"
					]
				}
			},
			"response": []
		}
	]
}